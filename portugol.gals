:[\ \n\t\r\s]+|[/][/].*|"/*"([^"*"]|[\r\n]|("*"+([^"*"/]|[\r\n])))*"*"+/

// comentários
COMENTARIO_UMA_LINHA:[/][/].*
COMENTARIO_VARIAS_LINHAS: "/*"([^"*"]|[\r\n]|("*"+([^"*"/]|[\r\n])))*"*"+/

// delimitadores
"{":\{
"}":\}
"(":\(
")":\)
"[":\[
"]":\]
",":,
";":;

// operações matemáticas
"+": \+
"-":\-
"*":\*
"/": /
"%": "%"
// atribuição
"=":=
"-->":"-->"
"+=":"+="
"*=":"*="
"/=":"/="
"-=":"-="
// unitarios
"++":"++"
"--":"--"

// reservadas
PROGRAMA: programa
FUNCAO: funcao
CONST: const
RETORNE: retorne
INCLUA: inclua
BIBLIOTECA: biblioteca
LEIA: leia
ESCREVA: escreva

// declarações
TIPO_INTEIRO: "inteiro"
TIPO_REAL: real
TIPO_CARACTER: caracter
TIPO_CADEIA: cadeia
TIPO_LOGICO: logico

VALOR_LOGICO: verdadeiro|falso

// desvios condicionais
SE: "se"
SENAO: "senao"
ESCOLHA: "escolha"
CASO: "caso"
PARE: "pare"
":": :

// laços de repetição
FACA: "faca"
ENQUANTO: "enquanto"
PARA: "para"

// operações lógicas
E: e
OU: ou
NAO: nao

// nome variavel
ID: [a-zA-Z][a-zA-Z0-9_]*

// operações bitwise
"&": &
"|": \|
"~": ~
"^": \^
"<<": "<<"
">>": ">>"

// operações relacionais
"<=":<=
"<":<
">=":>=
">":>
"==":==
"!=":!=

// tipos
VALOR_INTEIRO: [0-9]+
VALOR_REAL: [0-9]+\.[0-9]+
VALOR_CARACTER: '[^']'
VALOR_CADEIA:\"([^\"](\\\")*)*\"
